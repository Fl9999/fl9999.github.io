<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Django model外键的反向引用</title>
    <url>/2022/07/15/Django-model%E5%A4%96%E9%94%AE%E7%9A%84%E5%8F%8D%E5%90%91%E5%BC%95%E7%94%A8/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Question</span>(models.Model):</span><br><span class="line">	question_text=models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">	pub_date=models.DateTimeField(<span class="string">&#x27;datepublished&#x27;</span>)</span><br><span class="line"></span><br><span class="line">	def__str__(self):</span><br><span class="line">		returnself.question_text</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Choice</span>(models.Model):</span><br><span class="line">	question=models.ForeignKey(Question,on_delete=models.CASCADE)</span><br><span class="line">	choice_text=models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">	votes=models.IntegerField(default=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">	def__str__(self):</span><br><span class="line">		returnself.choice_text</span><br><span class="line">  </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>上例中，Choice引用了Question作为外键，在模板中通过Question对象获取所有引用了Question对象的Choice对象，可以使用以下方法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for choice in question.choice_set.all %&#125;</span><br><span class="line">	&lt;li&gt;&#123;&#123;choice.choice_text&#125;&#125;&lt;/li&gt;</span><br><span class="line">&#123;%endfor%&#125;</span><br></pre></td></tr></table></figure>

<p>使用question.choice_set.all的方式获取所有引用question对象的Choice对象实例</p>
]]></content>
      <categories>
        <category>Python</category>
        <category>Django</category>
        <category>model</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Django</tag>
        <tag>Model</tag>
        <tag>ForeignKey</tag>
      </tags>
  </entry>
  <entry>
    <title>Django 模板中循环嵌套</title>
    <url>/2022/07/15/Django-%E6%A8%A1%E6%9D%BF%E4%B8%AD%E5%BE%AA%E7%8E%AF%E5%B5%8C%E5%A5%97/</url>
    <content><![CDATA[<p>模板中需要循环中循环，<code>&#123;% for i in alist %&#125;</code>,假如i是个元组或列表，需要继续循环：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> i <span class="keyword">in</span> alist %&#125;</span><br><span class="line">	&#123;% <span class="keyword">with</span> temp=I %&#125;</span><br><span class="line">		&#123;% <span class="keyword">for</span> k <span class="keyword">in</span> temp %&#125;</span><br><span class="line">		    …</span><br><span class="line">		&#123;% endfor %&#125;</span><br><span class="line">	&#123;% endwith %&#125;</span><br><span class="line">&#123;%endfor%&#125;</span><br></pre></td></tr></table></figure>
<p>或使用如下方式，data &#x3D; [[1,2],[3,4]]：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> l <span class="keyword">in</span> data%&#125;</span><br><span class="line"></span><br><span class="line">	&#123;% <span class="keyword">for</span> temp <span class="keyword">in</span> l % &#125;</span><br><span class="line">		&#123;% <span class="keyword">if</span> forloop.first % &#125;</span><br><span class="line">			<span class="string">&#x27;&#123;&#123;temp&#125;&#125;&#x27;</span>,</span><br><span class="line">		&#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">			&#123;&#123;temp&#125;&#125;</span><br><span class="line">		&#123;% endif %&#125;</span><br><span class="line">	&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%endfor%&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
        <category>Django</category>
        <category>模板</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Django</tag>
        <tag>ForeignKey</tag>
      </tags>
  </entry>
  <entry>
    <title>inotify安装使用</title>
    <url>/2022/07/18/inotify%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y inotify-tools</span><br></pre></td></tr></table></figure>
<p>安装后包含2个命令： <code>inotifywait </code>, <code>inotifywatch</code>,较为常用的命令是<code>inotifywait </code></p>
<h3 id="inotifywait参数说明"><a href="#inotifywait参数说明" class="headerlink" title="inotifywait参数说明"></a>inotifywait参数说明</h3><p>语法：<br>inotifywait [-hcmrq] [-e modify,access…] [-t ] [–format ] [–timefmt ] [ … ]</p>
<blockquote>
<p>@<br>排除不需要监视的文件，可以是相对路径，也可以是绝对路径。<br>–-fromfile<br>从文件读取需要监视的文件或排除的文件，一个文件一行，排除的文件以@开头。<br>-m, –-monitor<br>接收到一个事情而不退出，无限期地执行。默认的行为是接收到一个事情后立即退出。<br>-d, –-daemon<br>跟–monitor一样，除了是在后台运行，需要指定-–outfile把事情输出到一个文件。也意味着使用了–-syslog。<br>-o, –-outfile<br>输出事情到一个文件而不是标准输出。<br>-s, –-syslog<br>输出错误信息到系统日志<br>-r, –-recursive<br>监视一个目录下的所有子目录。<br>-q, –-quiet<br>指定一次，不会输出详细信息，指定二次，除了致命错误，不会输出任何信息。<br>–-exclude<br>正则匹配需要排除的文件，大小写敏感。<br>–-excludei<br>正则匹配需要排除的文件，忽略大小写。<br>-t , –-timeout<br>设置超时时间，如果为0，则无限期地执行下去。<br>-e , –-event<br>指定监视的事件。<br>-c, –-csv<br>输出csv格式。<br>–-timefmt<br>指定时间格式，用于–-format选项中的%T格式。<br>–-format<br>指定输出格式。</p>
<blockquote>
<p>%w 表示发生事件的目录<br>%f 表示发生事件的文件<br>%e 表示发生的事件<br>%Xe 事件以“X”分隔<br>%T 使用由–-timefmt定义的时间格式</p>
</blockquote>
</blockquote>
<h3 id="可监听事件列表"><a href="#可监听事件列表" class="headerlink" title="可监听事件列表"></a>可监听事件列表</h3><p>access	文件读取<br>modify	文件更改。<br>attrib	文件属性更改，如权限，时间戳等。<br>close_write	以可写模式打开的文件被关闭，不代表此文件一定已经写入数据。<br>close_nowrite	以只读模式打开的文件被关闭。<br>close	文件被关闭，不管它是如何打开的。<br>open	文件打开。<br>moved_to	一个文件或目录移动到监听的目录，即使是在同一目录内移动，此事件也触发。<br>moved_from	一个文件或目录移出监听的目录，即使是在同一目录内移动，此事件也触发。<br>move	包括moved_to和 moved_from<br>move_self	文件或目录被移除，之后不再监听此文件或目录。<br>create	文件或目录创建<br>delete	文件或目录删除<br>delete_self	文件或目录移除，之后不再监听此文件或目录<br>unmount	文件系统取消挂载，之后不再监听此文件系统。</p>
<h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">inotifywait -m -r -e modify /source/ | while read dir action filename</span><br><span class="line">do </span><br><span class="line">  echo $&#123;dir&#125;</span><br><span class="line">  echo $&#123;action&#125;</span><br><span class="line">  echo $&#123;filename&#125;</span><br><span class="line">  rsync -a -u /source/ /dest/</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
        <category>常用服务</category>
        <category>inotify</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>inotify</tag>
      </tags>
  </entry>
  <entry>
    <title>windows远程登录失败</title>
    <url>/2022/07/14/windows%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E5%A4%B1%E8%B4%A5/</url>
    <content><![CDATA[<h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>远程登录windows失败，报错:</p>
<blockquote>
<p>由于没有远程桌面授权服务器可以提供许可证，远程会话连接已断开，请跟服务器管理员联系</p>
</blockquote>
<p><img src="https://i.csms.tech/img.png"></p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol>
<li>打开cmd，执行以下命令远程登录无法登录的Windows主机<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mstsc /v:<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span> /admin</span><br></pre></td></tr></table></figure></li>
<li>打开注册表</li>
</ol>
<p><img src="https://i.csms.tech/img_1.png"><br>3. 找到路径： HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\RCM\GracePeriod.如果超过120天后RCM下面会有一个GracePeriod,先备份这项注册表，再删除除了默认的的注册表项。</p>
<ol start="4">
<li>重启电脑后生效.</li>
</ol>
]]></content>
      <categories>
        <category>Window</category>
        <category>常见错误</category>
      </categories>
      <tags>
        <tag>Window</tag>
      </tags>
  </entry>
</search>
